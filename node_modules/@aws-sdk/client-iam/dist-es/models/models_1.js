import { __assign, __extends } from "tslib";
import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { IAMServiceException as __BaseException } from "./IAMServiceException";
var KeyPairMismatchException = (function (_super) {
    __extends(KeyPairMismatchException, _super);
    function KeyPairMismatchException(opts) {
        var _this = _super.call(this, __assign({ name: "KeyPairMismatchException", $fault: "client" }, opts)) || this;
        _this.name = "KeyPairMismatchException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, KeyPairMismatchException.prototype);
        return _this;
    }
    return KeyPairMismatchException;
}(__BaseException));
export { KeyPairMismatchException };
var MalformedCertificateException = (function (_super) {
    __extends(MalformedCertificateException, _super);
    function MalformedCertificateException(opts) {
        var _this = _super.call(this, __assign({ name: "MalformedCertificateException", $fault: "client" }, opts)) || this;
        _this.name = "MalformedCertificateException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, MalformedCertificateException.prototype);
        return _this;
    }
    return MalformedCertificateException;
}(__BaseException));
export { MalformedCertificateException };
var DuplicateCertificateException = (function (_super) {
    __extends(DuplicateCertificateException, _super);
    function DuplicateCertificateException(opts) {
        var _this = _super.call(this, __assign({ name: "DuplicateCertificateException", $fault: "client" }, opts)) || this;
        _this.name = "DuplicateCertificateException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, DuplicateCertificateException.prototype);
        return _this;
    }
    return DuplicateCertificateException;
}(__BaseException));
export { DuplicateCertificateException };
var InvalidCertificateException = (function (_super) {
    __extends(InvalidCertificateException, _super);
    function InvalidCertificateException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidCertificateException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidCertificateException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidCertificateException.prototype);
        return _this;
    }
    return InvalidCertificateException;
}(__BaseException));
export { InvalidCertificateException };
var DuplicateSSHPublicKeyException = (function (_super) {
    __extends(DuplicateSSHPublicKeyException, _super);
    function DuplicateSSHPublicKeyException(opts) {
        var _this = _super.call(this, __assign({ name: "DuplicateSSHPublicKeyException", $fault: "client" }, opts)) || this;
        _this.name = "DuplicateSSHPublicKeyException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, DuplicateSSHPublicKeyException.prototype);
        return _this;
    }
    return DuplicateSSHPublicKeyException;
}(__BaseException));
export { DuplicateSSHPublicKeyException };
var InvalidPublicKeyException = (function (_super) {
    __extends(InvalidPublicKeyException, _super);
    function InvalidPublicKeyException(opts) {
        var _this = _super.call(this, __assign({ name: "InvalidPublicKeyException", $fault: "client" }, opts)) || this;
        _this.name = "InvalidPublicKeyException";
        _this.$fault = "client";
        Object.setPrototypeOf(_this, InvalidPublicKeyException.prototype);
        return _this;
    }
    return InvalidPublicKeyException;
}(__BaseException));
export { InvalidPublicKeyException };
export var UntagPolicyRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UntagRoleRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UntagSAMLProviderRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UntagServerCertificateRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UntagUserRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateAccessKeyRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateAccountPasswordPolicyRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateAssumeRolePolicyRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateGroupRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateLoginProfileRequestFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.Password && { Password: SENSITIVE_STRING }))); };
export var UpdateOpenIDConnectProviderThumbprintRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateRoleRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateRoleResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateRoleDescriptionRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateRoleDescriptionResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateSAMLProviderRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateSAMLProviderResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateServerCertificateRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateServiceSpecificCredentialRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateSigningCertificateRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateSSHPublicKeyRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UpdateUserRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UploadServerCertificateRequestFilterSensitiveLog = function (obj) { return (__assign(__assign({}, obj), (obj.PrivateKey && { PrivateKey: SENSITIVE_STRING }))); };
export var UploadServerCertificateResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UploadSigningCertificateRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UploadSigningCertificateResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UploadSSHPublicKeyRequestFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
export var UploadSSHPublicKeyResponseFilterSensitiveLog = function (obj) { return (__assign({}, obj)); };
